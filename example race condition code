import threading

# Shared resource
counter = 0

def increment():
    global counter
    for _ in range(100000):
        counter += 1

# Create two threads
thread1 = threading.Thread(target=increment)
thread2 = threading.Thread(target=increment)

# Start the threads
thread1.start()
thread2.start()

# Wait for both threads to finish
thread1.join()
thread2.join()

print(f'Final counter value: {counter}')

import threading

# Shared resource
counter = 0
# Create a lock object
counter_lock = threading.Lock()

def increment():
    global counter
    for _ in range(100000):
        # Acquire the lock before modifying the counter
        with counter_lock:
            counter += 1

# Create two threads
thread1 = threading.Thread(target=increment)
thread2 = threading.Thread(target=increment)

# Start the threads
thread1.start()
thread2.start()

# Wait for both threads to finish
thread1.join()
thread2.join()

print(f'Final counter value: {counter}')
